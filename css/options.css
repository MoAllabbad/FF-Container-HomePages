body {
  background: #fff;
  color: #202023;
  min-height: 250px;
}

h3 {
  margin-block-start: 2.5rem;
}

h3:first-of-type {
  margin-block-start: 1rem;
}

p,
label {
  color: rgb(74, 74, 79);
}

@media (prefers-color-scheme: dark) {
  body {
    background: #202023;
    color: #fff;
  }

  p,
  label {
    color: rgb(177, 177, 179);
  }
}

/* Color and icon helpers */
[data-identity-color="blue"] {
  --identity-tab-color: #37adff;
  --identity-icon-color: #37adff;
}

[data-identity-color="turquoise"] {
  --identity-tab-color: #00c79a;
  --identity-icon-color: #00c79a;
}

[data-identity-color="green"] {
  --identity-tab-color: #51cd00;
  --identity-icon-color: #51cd00;
}

[data-identity-color="grey"] {
  /* Only used for the edit panel */
  --identity-icon-color: #616161;
}

[data-identity-color="yellow"] {
  --identity-tab-color: #ffcb00;
  --identity-icon-color: #ffcb00;
}

[data-identity-color="orange"] {
  --identity-tab-color: #ff9f00;
  --identity-icon-color: #ff9f00;
}

[data-identity-color="red"] {
  --identity-tab-color: #ff613d;
  --identity-icon-color: #ff613d;
}

[data-identity-color="pink"] {
  --identity-tab-color: #ff4bda;
  --identity-icon-color: #ff4bda;
}

[data-identity-color="purple"] {
  --identity-tab-color: #af51f5;
  --identity-icon-color: #af51f5;
}

[data-identity-color="transparent"] {
  /* --identity-tab-color: #ae51f500;
  --identity-icon-color: #ae51f500; */
}

[data-identity-icon="fingerprint"] {
  --identity-icon: url("/img/usercontext.svg#fingerprint");
}

[data-identity-icon="briefcase"] {
  --identity-icon: url("/img/usercontext.svg#briefcase");
}

[data-identity-icon="dollar"] {
  --identity-icon: url("/img/usercontext.svg#dollar");
}

[data-identity-icon="cart"] {
  --identity-icon: url("/img/usercontext.svg#cart");
}

[data-identity-icon="circle"] {
  --identity-icon: url("/img/usercontext.svg#circle");
}

[data-identity-icon="food"] {
  --identity-icon: url("/img/usercontext.svg#food");
}

[data-identity-icon="gift"] {
  --identity-icon: url("/img/usercontext.svg#gift");
}

[data-identity-icon="vacation"] {
  --identity-icon: url("/img/usercontext.svg#vacation");
}

[data-identity-icon="fruit"] {
  --identity-icon: url("/img/usercontext.svg#fruit");
}

[data-identity-icon="pet"] {
  --identity-icon: url("/img/usercontext.svg#pet");
}

[data-identity-icon="tree"] {
  --identity-icon: url("/img/usercontext.svg#tree");
}

[data-identity-icon="chill"] {
  --identity-icon: url("/img/usercontext.svg#chill");
}

[data-identity-icon="fence"] {
  --identity-icon: url("/img/usercontext.svg#fence");
}

[data-identity-icon="firefox"] {
  --identity-icon: url("/img/Firefox_brand_logo,_2019.svg");
}

hr{
  color:  rgba(249,249,250,0.1);

}

/* This is the top flex container which represents one row.
   Each row has two top level items; the identity info and
   the input form. The identity info which has the icon and 
   the name are wrapped in another container so that using 
   "justify-content: space-between" here moves the whole item
   to the left. So as long as we have two children. We will 
   have right and left alignment */
.row {
  display: flex;
  justify-content: space-between;
}

/* The icon and name are wrapped in their own container which
   is displayed inline preventing wrapping. The flex basis is
   set with no shrinking which gives it a minimum size. It is
   set to grow without limit however it is still bound by the
   overall size of the row minus the other child(ren) in it.
   But again, since no explicit upper bound is set in .row
   "overflow: hidden" truncates contents when the parent flex
   container is 'ideally' filled so the text will grow (i.e
   if identity name is long) but will still cut at the ideal
   page size */
.identity-info-wrapper{
  display: inline-flex;
  flex: 1 0 110px;
  font-size: small;
  overflow: hidden;
}  

/* These are the icon parameters. Flex item is set to have 
   a fixed size since icons have about the same size and 
   should aesthetically have the same area */
.identity-icon {
  background-image: var(--identity-icon);
  background-position: center center;
  background-repeat: no-repeat;
  background-size: 25px; /*change icon size*/
  block-size: 100%;
  fill: var(--identity-icon-color);
  filter: url('/img/filters.svg#fill');
  height: 25px;
  flex: 0 0 40px;

}

/* These are the identity name parameters.
   The overflow here is tied with the usage of 
   the ellipsis. Otherwise, overflow is already
   truncated by the parent container .identity-info
   */
.identity-name {
  line-height: 25px;
  margin-left: 5px;
  padding-bottom: 5px; 
  padding: 3px;
  font-size: small;
  overflow: hidden;
  text-overflow: ellipsis;
}

.input-wrapper{
  display: inline-flex; 
}

/* url input box */
input[type=url],
input[type=url]:hover,
input[type=url]:focus{
  margin: .4rem;
  padding: 4px;
  border: 1px solid rgba(249,249,250,0.2);
  border-radius: 1px;
  background-color: transparent;
  color: #b1b1b3;
  width: 195px;
}

input[type=url]:hover {
  border-color: rgba(249, 249, 250, 0.288);
}

input[type=url]:focus {
  border-color:#0a84ff;
  background-color:  rgba(249,249,250,0.1);  
}

/* save button */
input[type=submit] {
  width: 60px;
  margin: .4rem;
  padding: 4px 10px;
  border: 1px solid rgba(249,249,250,0.2);
  border-radius: 1px;
  background-color: transparent;
  color: #b1b1b3;  
}

input[type=submit]:hover {
  border-color: rgba(249, 249, 250, 0.288);
}

input[class=save-button]{
  background-color:  rgba(171, 171, 184, 0.288);;
}

/* TODO: color update with media query */
input[class=save-button]:hover{
  border-color:#0a84ff;
}

@media (prefers-color-scheme: light) {

  hr{
    color:  rgba(249,249,250,0.3);
  }

  /* url input box */
  input[type=url],
  input[type=url]:hover,
  input[type=url]:focus{
    border: 1px solid #737373;
    background-color: transparent;
    color: #63637a;
  }

  input[type=url]:hover {
    border-color:black;
  }

  input[type=url]:focus {
    border-color: #0a84ff;
    background-color: rgba(249,249,250);  
  }

  /* save button */
  input[type=submit] {
 
    background-color: rgb(209, 209, 209, 0.9);
    color: #08080c;  
  }

  input[type=submit]:hover {
    border-color: rgba(18, 18, 27, 0.288);
  }

  input[class=save-button]{
    background-color: rgb(160, 159, 159, 0.8);
  }
}

/* These are from Moz., here for reference */
/*:root {
	--in-content-page-background: #2A2A2E;
	--in-content-page-color: rgb(249, 249, 250);
	--in-content-text-color: var(--in-content-page-color);
	--in-content-deemphasized-text: var(--grey-40);
	--in-content-box-background: #202023;
	--in-content-box-background-hover: rgba(249,249,250,0.15);
	--in-content-box-background-active: rgba(249,249,250,0.2);
	--in-content-box-background-odd: rgba(249,249,250,0.05);
	--in-content-box-info-background: rgba(249,249,250,0.15);
	--in-content-border-color: rgba(249,249,250,0.2);
	--in-content-border-hover: rgba(249,249,250,0.3);
	--in-content-box-border-color: rgba(249,249,250,0.2);
	--in-content-button-background: rgba(249,249,250,0.1);
	--in-content-button-background-hover: rgba(249,249,250,0.15);
	--in-content-button-background-active: rgba(249,249,250,0.2);
	--in-content-category-background-hover: rgba(249,249,250,0.1);
	--in-content-category-background-active: rgba(249,249,250,0.15);
	--in-content-category-background-selected-hover: rgba(249,249,250,0.15);
	--in-content-category-background-selected-active: rgba(249,249,250,0.2);
	--in-content-table-background: #202023;
	--in-content-table-border-dark-color: rgba(249,249,250,0.2);
	--in-content-table-header-background: #002b57;
	--in-content-dialog-header-background: rgba(249,249,250,0.05);
	--in-content-category-text-selected: var(--blue-40);
	--in-content-category-text-selected-active: var(--blue-50);
	--in-content-link-color: var(--blue-40);
	--in-content-link-color-hover: var(--blue-50);
	--in-content-link-color-active: var(--blue-60);
	--in-content-link-color-visited: var(--blue-40);
	--in-content-tab-color: var(--in-content-page-color);
	--card-outline-color: var(--grey-60);
	scrollbar-color: rgba(249,249,250,.4) rgba(20,20,25,.3);
} */
/* moz */